This is an R Markdown presentation. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
library(devtools)
install.packages(devtools)
install.packages("devtools")
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
shiny::runApp('CourseraDataProductsAssignment3/WeatherTrendsSwitzerland')
system("defaults write org.R-project.R force.LANG en_US.UTF-8")
require(quanteda)
install.packages("quanteda")
require(quanteda)
setwd("E:/git/CourseraDataScienceCapstone")
blogstxt <- readtext("data/en_US/en_US.blogs.txt")
require(readtext)
install.packages("readtext")
install.package("readtext")
devtools::install_github("kbenoit/readtext")
require(readtext)
blogstxt <- readtext("data/en_US/en_US.blogs.txt")
View(blogstxt)
?readtext
blogstxt <- readtext("data/en_US/en_US.blogs.txt")
View(blogstxt)
blogstxt <- corpus(readtext("data/en_US/en_US.blogs.txt"))
blogstxt
summary(blogstxt)
blogstxt <- file(description="data/en_US/en_US.blogs.txt", open="r")
newstxt <- file(description="data/en_US/en_US.news.txt", open="r")
twittertxt <- file(description="data/en_US/en_US.twitter.txt", open="r")
for(i in 1:n) {
tmp <- scan(file=blogstxt, nlines=1, quiet=TRUE)
if (length(tmp)> result) result <-length(tmp)
}
result <- 0
while ( TRUE ) {
line = readLines(blogstxt, n = 1)
if ( length(line) == 0 ) {
break
}
if (length(tmp)> result) result <-length(tmp)
}
while ( TRUE ) {
line = readLines(blogstxt, n = 1)
if ( length(line) == 0 ) {
break
}
if (length(line)> result) result <-length(line)
}
blogstxt <- file(description="data/en_US/en_US.blogs.txt", open="r")
newstxt <- file(description="data/en_US/en_US.news.txt", open="r")
twittertxt <- file(description="data/en_US/en_US.twitter.txt", open="r")
result <- 0
while ( TRUE ) {
line = readLines(blogstxt, n = 1)
if ( length(line) == 0 ) {
break
}
if (length(line)> result) result <-nchar(line)
}
while ( TRUE ) {
line = readLines(newstxt, n = 1)
if ( length(line) == 0 ) {
break
}
if (length(line)> result) result <-nchar(line)
}
while ( TRUE ) {
line = readLines(twittertxt, n = 1)
if ( length(line) == 0 ) {
break
}
if (length(line)> result) result <-nchar(line)
}
close(blogstxt)
close(newstxt)
close(twittertxt)
longestline <- function(filename) {
con <- file(description=paste("data/en_US/en_US.", filename, ".txt", sep = "") , open="r")
result <- 0
while ( TRUE ) {
line = readLines(con, n = 1)
if ( length(line) == 0 ) {
break
}
if (length(line)> result) result <-nchar(line)
}
close(con)
}
longestline <- function(filename) {
con <- file(description=paste("data/en_US/en_US.", filename, ".txt", sep = "") , open="r")
result <- 0
while ( TRUE ) {
line = readLines(con, n = 1)
if ( length(line) == 0 ) {
break
}
if (length(line)> result) result <-nchar(line)
}
close(con)
result
}
longestline("blogstxt")
longestline("blogs")
longestline("news")
longestline("twitter")
longestline("news")
longestline <- function(filename) {
con <- file(description=paste("data/en_US/en_US.", filename, ".txt", sep = "") , open="r", blocking = TRUE)
result <- 0
while ( TRUE ) {
line = readLines(con, n = 1)
if ( length(line) == 0 ) {
break
}
if (length(line)> result) result <-nchar(line)
}
close(con)
result
}
longestline("news")
longestline <- function(filename) {
con <- file(description=paste("data/en_US/en_US.", filename, ".txt", sep = "") , open="r", blocking = TRUE)
result <- 0
while ( TRUE ) {
line = readLines(con, n = 1, skipNul = TRUE)
if ( length(line) == 0 ) {
break
}
if (length(line)> result) result <-nchar(line)
}
close(con)
result
}
longestline("news")
longestline <- function(filename) {
con <- file(description=paste("data/en_US/en_US.", filename, ".txt", sep = "") , open="r", blocking = TRUE)
result <- 0
while ( TRUE ) {
line = readLines(con, n = 1, skipNul = TRUE, encoding = "UTF-8" )
if ( length(line) == 0 ) {
break
}
if (length(line)> result) result <-nchar(line)
}
close(con)
result
}
longestline("news")
longestline <- function(filename) {
con <- file(description=paste("data/en_US/en_US.", filename, ".txt", sep = "") , open="rb", blocking = TRUE)
result <- 0
while ( TRUE ) {
line = readLines(con, n = 1, skipNul = TRUE, encoding = "UTF-8" )
if ( length(line) == 0 ) {
break
}
if (length(line)> result) result <-nchar(line)
}
close(con)
result
}
longestline("news")
longestline("blogs")
longestline <- function(filename) {
con <- file(description=paste("data/en_US/en_US.", filename, ".txt", sep = "") , open="rb", blocking = TRUE)
result <- 0
while ( TRUE ) {
line = readLines(con, n = 1, skipNul = TRUE, encoding = "UTF-8" )
if ( length(line) == 0 ) {
break
}
if (length(line)> result) {
result <- nchar(line)
}
}
close(con)
result
}
longestline("news")
longestline <- function(filename) {
con <- file(description=paste("data/en_US/en_US.", filename, ".txt", sep = "") , open="rb", blocking = TRUE)
which.max(readlines(con))
}
longestline("news")
longestline <- function(filename) {
con <- file(description=paste("data/en_US/en_US.", filename, ".txt", sep = "") , open="rb", blocking = TRUE)
which.max(readLines(con))
}
longestline("news")
longestline("news")$
longestline <- function(filename) {
con <- file(description=paste("data/en_US/en_US.", filename, ".txt", sep = "") , open="rb", blocking = TRUE)
result <- which.max(readLines(con))
close(con)
result
}
longestline <- function(filename) {
con <- file(description=paste("data/en_US/en_US.", filename, ".txt", sep = "") , open="rb", blocking = TRUE)
result <- which.max(readLines(con))
close(con)
result
}
longestline("news")
longestline("blogs")
longestline <- function(filename) {
con <- file(description=paste("data/en_US/en_US.", filename, ".txt", sep = "") , open="rb", blocking = TRUE)
result <- which.max(lapply( readLines(con), nchar))
close(con)
result
}
longestline("blogs")
longestline("news")
countlines <- function(filename, pattern) {
con <- file(description=paste("data/en_US/en_US.", filename, ".txt", sep = "") , open="rb", blocking = TRUE)
result <- sum(grep(pattern, readLines(con)))
close(con)
result
}
longestline("blogs", "love")
countlines("blogs", "love")
countlines <- function(filename, pattern) {
con <- file(description=paste("data/en_US/en_US.", filename, ".txt", sep = "") , open="rb", blocking = TRUE)
result <- sum(as.numeric(grep(pattern, readLines(con))))
close(con)
result
}
countlines("twitter", "love")
con <- file(description=paste("data/en_US/en_US.", filename, ".txt", sep = "") , open="rb", blocking = TRUE)
con <- file(description=paste("data/en_US/en_US.", "twitter", ".txt", sep = "") , open="rb", blocking = TRUE)
lines <- readLines(con)
lines <- readLines(con,skipNul = TRUE)
close(con)
lines <- readLines(con,skipNul = TRUE)
con <- file(description=paste("data/en_US/en_US.", "twitter", ".txt", sep = "") , open="rb", blocking = TRUE)
lines <- readLines(con,skipNul = TRUE)
love <- grep("love", lines)
love <- grepl("love", lines)
sum(love)
countlines <- function(filename, pattern) {
con <- file(description=paste("data/en_US/en_US.", filename, ".txt", sep = "") , open="rb", blocking = TRUE)
result <- sum(as.numeric(grepl(pattern, readLines(con, skipNul = TRUE))))
close(con)
result
}
countlines <- function(filename, pattern) {
con <- file(description=paste("data/en_US/en_US.", filename, ".txt", sep = "") , open="rb", blocking = TRUE)
result <- sum(grepl(pattern, readLines(con, skipNul = TRUE)))
close(con)
result
}
countlines("twitter", "love")
countlines("twitter", "love")/countlines("twitter", "hate")
grep("biostat", lines)
lines[556872]
grep("A computer once beat me at chess, but it was no match for me at kickboxing", lines)
